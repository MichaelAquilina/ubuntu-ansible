- name: Install Aptitude
  become: yes
  apt:
    name: aptitude
    state: latest

- name: Add Apt Keys
  become: yes
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: "{{ item }}"
  loop: "{{ apt_keys }}"

- name: Add Apt Repos
  become: yes
  apt_repository:
    state: present
    repo: "{{ item }}"
  loop: "{{ apt_repos }}"

- name: Install APT Packages
  become: yes
  apt:
    pkg: "{{ item }}"
    state: present
    update_cache: yes
  loop: "{{ apt_packages }}"

- name: Setup node symbolic link
  become: yes
  file:
    src: /usr/bin/nodejs
    dest: /usr/bin/node
    state: link

- name: Create htop config folder
  file:
    state: directory
    mode: 0700
    path: ~/.config/htop

- name: Setup Configuration Files
  file:
    dest: "{{ item.dest }}"
    force: yes
    state: link
    src: "{{ ansible_env.PWD }}/roles/ubuntu/files/{{ item.filename }}"
  loop:
    - {filename: tigrc, dest: ~/.tigrc }
    - {filename: nanorc, dest: ~/.nanorc }
    - {filename: htoprc, dest: ~/.config/htop/htoprc }
    - {filename: xprofile, dest: ~/.xprofile}
    - {filename: ansible.cfg, dest: ~/.ansible.cfg}

- name: Setup gitconfig
  template:
    dest: ~/.gitconfig
    src: gitconfig.j2

- name: Setup gitignore
  file:
    dest: ~/.gitignore
    src: "{{ ansible_env.PWD }}/roles/ubuntu/files/gitignore"
    force: yes
    state: link

- name: Insults Directory
  become: yes
  file:
    state: directory
    dest: "/etc/sudoers.d"
    mode: "440"

- name: Setup Insults
  become: yes
  copy:
    src: "roles/ubuntu/files/sudoers_insults"
    dest: "/etc/sudoers.d/insults"
    mode: "0440"

- name: Update to latest PIP
  become: yes
  pip:
    name: pip
    state: latest

- name: Install Global PIP Requirements
  become: yes
  pip:
    requirements: "{{ ansible_env.PWD }}/roles/ubuntu/files/requirements_global.txt"
    state: latest

- name: Remove useless items
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "~/Templates"
    - "~/Public"
    - "~/examples.desktop"

- name: Create Dev Directory
  file:
    path: "{{ ansible_env.HOME }}/Development"
    state: directory

- name: Crontab - Clear Day Old Downloads every 4 hours
  cron:
    job: "find ~/Downloads -type f -mtime +0 -delete"
    hour: "*/4"
    minute: "0"
    name: "Clear Downloads"

- name: Create bin home Directory
  file:
    path: "{{ ansible_env.HOME }}/bin"
    state: directory
    mode: 0700

- name: Create man home Directory
  file:
    path: "{{ ansible_env.HOME }}/man/man1"
    recurse: true
    state: directory
    mode: 0700

- name: Global Git Status Script
  file:
    state: link
    force: yes
    src: "{{ ansible_env.PWD }}/roles/ubuntu/files/git_status.sh"
    dest: ~/bin/git_status

- name: Setup Postgres Cheatsheet
  become: yes
  file:
    state: link
    dest: "/usr/share/man/man1/psqlcheatsheet.1"
    src: "{{ ansible_env.PWD }}/roles/ubuntu/files/psqlcheatsheet"
    force: yes

- include_tasks: gpg.yml

- include_tasks: zsh.yml

- include_tasks: vim.yml

- include_tasks: docker.yml
